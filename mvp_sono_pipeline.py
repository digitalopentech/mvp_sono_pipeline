# Databricks notebook source
# MAGIC %md
# MAGIC # üéØ Objetivo do MVP ‚Äì An√°lise da Qualidade do Sono
# MAGIC
# MAGIC - **Fonte:** Kaggle  
# MAGIC - **Licen√ßa:** Gratuito para uso educacional  
# MAGIC - **T√©cnica de ingest√£o:** Upload manual e leitura via Spark (formato CSV) no Databricks  
# MAGIC - **Link do Dataset:** [Sleep Health and Lifestyle Dataset ‚Äì Kaggle](https://www.kaggle.com/datasets/uom190346a/sleep-health-and-lifestyle-dataset)
# MAGIC
# MAGIC O objetivo deste projeto √© analisar fatores de estilo de vida e sa√∫de que influenciam a qualidade do sono. A partir do dataset "Sleep Health and Lifestyle", construiremos um pipeline de dados completo com arquitetura em camadas (Bronze, Silver e Gold), utilizando a plataforma **Databricks Community Edition**.
# MAGIC
# MAGIC ## Perguntas de neg√≥cio a serem respondidas:
# MAGIC
# MAGIC 1. Quais fatores influenciam a **qualidade do sono**?
# MAGIC 2. O **n√≠vel de estresse** afeta a **dura√ß√£o** e a qualidade do sono?
# MAGIC 3. Pessoas com certas **ocupa√ß√µes dormem melhor ou pior**?
# MAGIC 4. Existe rela√ß√£o entre **IMC / atividade f√≠sica** e qualidade do sono?
# MAGIC
# MAGIC ---
# MAGIC
# MAGIC ### Pipeline de Dados ‚Äì An√°lise de Sa√∫de do Sono e Estilo de Vida
# MAGIC
# MAGIC Este notebook demonstra a constru√ß√£o de um pipeline de dados completo, tendo como base o dataset **Sleep Health and Lifestyle**. Esse conjunto de dados **sint√©tico** foi obtido no Kaggle e cont√©m informa√ß√µes sobre **h√°bitos de sono e fatores de estilo de vida** de **374 indiv√≠duos**, distribu√≠dos em **13 colunas**.
# MAGIC
# MAGIC As vari√°veis incluem:
# MAGIC - Dura√ß√£o e qualidade do sono
# MAGIC - N√≠vel de atividade f√≠sica (minutos)
# MAGIC - N√≠vel de estresse (escala de 1 a 10)
# MAGIC - Categoria de IMC
# MAGIC - Press√£o arterial
# MAGIC - Frequ√™ncia card√≠aca
# MAGIC - Passos di√°rios
# MAGIC - Ocupa√ß√£o
# MAGIC - Presen√ßa de dist√∫rbios do sono (Ins√¥nia, Apneia, Aus√™ncia de Dist√∫rbio)
# MAGIC
# MAGIC O pipeline foi implementado seguindo boas pr√°ticas de engenharia de dados, com camadas:
# MAGIC
# MAGIC ---
# MAGIC
# MAGIC ## 1. Coleta de Dados (Camada Bronze)
# MAGIC
# MAGIC **Origem dos Dados:**  
# MAGIC O dataset foi obtido atrav√©s do Kaggle e armazenado localmente como CSV. O arquivo foi carregado para o **Databricks File System (DBFS)** usando a interface do Databricks Community Edition.
# MAGIC
# MAGIC **Camada Bronze:**  
# MAGIC Nesta camada, mantemos os dados brutos conforme fornecidos, sem altera√ß√µes, apenas realizando a convers√£o para um formato otimizado (Parquet) para facilitar o armazenamento e a leitura distribu√≠da.
# MAGIC
# MAGIC - üìÅ **Caminho do CSV no DBFS:** `/FileStore/tables/Sleep_health_and_lifestyle_dataset.csv`
# MAGIC - ‚öôÔ∏è **Procedimento de Upload:** Upload via interface gr√°fica do Databricks Community Edition (menu lateral > "Upload Data").  
# MAGIC   Alternativamente, seria poss√≠vel usar `dbutils.fs.cp` ou a API REST da plataforma.
# MAGIC
# MAGIC **Leitura Inicial:**  
# MAGIC Os dados s√£o lidos como DataFrame Spark, o schema √© inferido automaticamente e os dados s√£o salvos como **Parquet** na camada Bronze.
# MAGIC
# MAGIC ---
# MAGIC
# MAGIC **Resumo:** O texto est√° correto, mas com essas pequenas melhorias, ele:
# MAGIC
# MAGIC - Ganha mais clareza (ex: voc√™ citava 400 registros, mas o CSV tem exatamente **374**, o que j√° ajustamos).
# MAGIC - Alinha a linguagem √† documenta√ß√£o profissional.
# MAGIC - Explicita detalhes t√©cnicos importantes (como os tipos de dados e o processo de leitura).
# MAGIC
# MAGIC Se quiser, posso revisar e formatar tamb√©m a **parte da camada Silver, Gold, an√°lises e conclus√£o** no mesmo padr√£o profissional. Deseja isso?

# COMMAND ----------

# Leitura do arquivo CSV na camada Bronze
df_bronze = (spark.read.format("csv")
             .option("header", True)    # o CSV cont√©m cabe√ßalho
             .option("inferSchema", True)  # inferir automaticamente os tipos de dados
             .load("/FileStore/tables/Sleep_health_and_lifestyle_dataset.csv"))

# Exibir o schema inferido
df_bronze.printSchema()

# Exibir as primeiras 5 linhas do DataFrame Bronze
df_bronze.show()

# Contagem de registros lidos
print(f"Total de registros (bronze): {df_bronze.count()}")

# COMMAND ----------

# MAGIC %md
# MAGIC _Ao ler o CSV com inferSchema, o Spark identifica tipos de dados adequados para cada coluna automaticamente. Vamos verificar a sa√≠da do schema para confirmar se todos os 13 campos foram reconhecidos corretamente, e olhar alguns exemplos de registros brutos:_

# COMMAND ----------

# MAGIC %md
# MAGIC ## Inspe√ß√£o Inicial da Camada Bronze
# MAGIC
# MAGIC O DataFrame Bronze cont√©m **13 colunas**, com os mesmos nomes presentes no CSV original ‚Äî incluindo espa√ßos e letras mai√∫sculas (por exemplo, `Quality of Sleep`, `Blood Pressure`, `Sleep Disorder`). Os nomes ainda **n√£o foram normalizados ou traduzidos** nesta etapa.
# MAGIC
# MAGIC Foram carregados **374 registros v√°lidos**, o que condiz com o conte√∫do real do arquivo. Embora o dataset tenha sido divulgado como contendo aproximadamente 400 entradas, o arquivo distribu√≠do possui exatamente **374 linhas completas**, sem valores nulos.
# MAGIC
# MAGIC Nesta fase **Bronze**, **mantemos os dados brutos** como est√£o, sem transforma√ß√µes:
# MAGIC - A coluna `Blood Pressure` permanece como uma **string no formato "sist√≥lica/diast√≥lica"** (ex: `"120/80"`).
# MAGIC - Colunas categ√≥ricas como `BMI Category` e `Sleep Disorder` mant√™m os valores originais do CSV, como `"Overweight"`, `"Normal"`, `"Sleep Apnea"`, `"None"`, etc.
# MAGIC
# MAGIC ---
# MAGIC
# MAGIC Agora, vamos **persistir esses dados brutos no formato Parquet** na camada Bronze do nosso Data Lake, mantendo a fidelidade total √† origem, mas garantindo um armazenamento mais eficiente e otimizado para leitura distribu√≠da.

# COMMAND ----------

# Salvando os dados brutos no formato Parquet na camada Bronze
df_bronze.write.mode("overwrite").parquet("/FileStore/tables/bronze/sleep_health_and_lifestyle")

df_bronze.show()

# COMMAND ----------

# MAGIC %md
# MAGIC _Ap√≥s essa opera√ß√£o, temos um arquivo Parquet (ou conjunto de arquivos) armazenado no DBFS, o que nos permitir√° consultas mais eficientes nas pr√≥ximas etapas. Em seguida, registraremos essa tabela Bronze no cat√°logo de dados do Spark SQL para possibilitar consultas SQL diretamente._

# COMMAND ----------

# Remove o diret√≥rio f√≠sico associado √† tabela no DBFS
dbutils.fs.rm("dbfs:/user/hive/warehouse/bronze_sleep_health", recurse=True)

# COMMAND ----------

# Deletar tabela se j√° existir
spark.sql("DROP TABLE IF EXISTS bronze_sleep_health")

# COMMAND ----------

# Registro da tabela Bronze no cat√°logo do Spark (Community Edition compat√≠vel)
df_bronze.write.mode("overwrite").format("parquet").saveAsTable("bronze_sleep_health")

# COMMAND ----------

# MAGIC %sql
# MAGIC SELECT * FROM bronze_sleep_health;

# COMMAND ----------

# MAGIC %md
# MAGIC ## 2. Modelagem dos Dados e Cat√°logo de Dados
# MAGIC
# MAGIC ### Estrat√©gia de Modelagem
# MAGIC
# MAGIC Optamos por uma **modelagem flat (plana)** no estilo **Data Lake**, mantendo todos os atributos em uma √∫nica tabela principal. Essa escolha se deve √† **natureza do dataset** ‚Äî um √∫nico arquivo CSV com todas as informa√ß√µes integradas ‚Äî e ao **pequeno volume de dados** (374 registros), que **dispensa a necessidade de normaliza√ß√£o**.
# MAGIC
# MAGIC Embora fosse poss√≠vel extrair dimens√µes separadas (como Ocupa√ß√£o, G√™nero, Categoria de IMC), a modelagem flat facilita a consulta direta, reduz complexidade e √© mais apropriada para projetos explorat√≥rios ou MVPs. Em ambientes com alto volume ou arquitetura OLAP, o comum seria normalizar em tabelas dimensionais (por exemplo, tabela de Pessoas, Ocupa√ß√µes, etc.).
# MAGIC
# MAGIC ---
# MAGIC
# MAGIC ### Cat√°logo de Dados (Data Dictionary)
# MAGIC
# MAGIC O cat√°logo abaixo descreve cada atributo dispon√≠vel no dataset, com nome da coluna, tipo de dado, explica√ß√£o e exemplos de valores:
# MAGIC
# MAGIC | **Coluna**                           | **Tipo**     | **Descri√ß√£o**                                                                 | **Valores Poss√≠veis / Exemplos**                        |
# MAGIC |-------------------------------------|--------------|-------------------------------------------------------------------------------|---------------------------------------------------------|
# MAGIC | `Person ID`                         | Inteiro      | Identificador √∫nico de cada indiv√≠duo.                                       | 1, 2, 3, ‚Ä¶ (at√© 374)                                     |
# MAGIC | `Gender`                            | String       | G√™nero do indiv√≠duo.                                                         | `Male`, `Female`                                         |
# MAGIC | `Age`                               | Inteiro      | Idade do indiv√≠duo, em anos.                                                 | 27 a 59                                                  |
# MAGIC | `Occupation`                        | String       | Ocupa√ß√£o ou profiss√£o declarada.                                             | `Software Engineer`, `Doctor`, `Teacher`                |
# MAGIC | `Sleep Duration (hours)`            | Double       | Dura√ß√£o m√©dia de sono por noite (em horas).                                  | 5.8 (m√≠n) a 8.5 (m√°x)                                    |
# MAGIC | `Quality of Sleep (scale: 1-10)`    | Inteiro      | Avalia√ß√£o subjetiva da qualidade do sono, de 1 (p√©ssimo) a 10 (excelente).   | 4 a 9                                                    |
# MAGIC | `Physical Activity Level (min/day)` | Inteiro      | Tempo de atividade f√≠sica di√°ria, em minutos.                                | 30 a 90 minutos                                          |
# MAGIC | `Stress Level (scale: 1-10)`        | Inteiro      | N√≠vel subjetivo de estresse, de 1 (baixo) a 10 (alto).                       | 3 a 8                                                    |
# MAGIC | `BMI Category`                      | String       | Categoria do IMC (√çndice de Massa Corporal).                                 | `Underweight`, `Normal`, `Normal Weight`, `Overweight`, `Obese` |
# MAGIC | `Blood Pressure (systolic/diastolic)` | String     | Press√£o arterial no formato ‚Äúsist√≥lica/diast√≥lica‚Äù, em mmHg.                | `120/80`, `130/90`                                       |
# MAGIC | `Heart Rate (bpm)`                  | Inteiro      | Frequ√™ncia card√≠aca de repouso, em batimentos por minuto.                    | 65 a 86 bpm                                              |
# MAGIC | `Daily Steps`                       | Inteiro      | Total de passos di√°rios realizados.                                          | 3000 a 10000 passos                                      |
# MAGIC | `Sleep Disorder`                    | String       | Presen√ßa de dist√∫rbio do sono (se houver).                                   | `None`, `Insomnia`, `Sleep Apnea`                       |
# MAGIC
# MAGIC ---
# MAGIC
# MAGIC ### Observa√ß√µes Importantes
# MAGIC
# MAGIC - As colunas foram mantidas com os nomes e formatos originais na camada **Bronze**, inclusive com espa√ßos e letras mai√∫sculas.
# MAGIC - A coluna `BMI Category` apresenta uma **duplica√ß√£o sem√¢ntica**: os valores `"Normal"` e `"Normal Weight"` aparecem como categorias separadas, mas representam o mesmo conceito. Essa inconsist√™ncia ser√° **tratada na etapa de limpeza**.
# MAGIC - O campo `Blood Pressure` est√° armazenado como texto (string), no formato `"sist√≥lica/diast√≥lica"`. Ele ser√° **dividido em duas colunas num√©ricas** (`systolic`, `diastolic`) durante a transforma√ß√£o, para facilitar an√°lises futuras.
# MAGIC - A modelagem **permanece flat**, onde **cada linha representa um indiv√≠duo completo**, com todos os seus atributos de sa√∫de e estilo de vida consolidados.
# MAGIC
# MAGIC ---
# MAGIC
# MAGIC ### Conclus√£o da Etapa
# MAGIC
# MAGIC Com essa modelagem, o dataset est√° pronto para passar √† pr√≥xima etapa do pipeline: a transforma√ß√£o e limpeza na **camada Silver**, onde aplicaremos tipagem adequada, padroniza√ß√£o de categorias e tratamento de inconsist√™ncias.
# MAGIC
# MAGIC

# COMMAND ----------

# MAGIC %md
# MAGIC ## 3. Limpeza e Transforma√ß√£o dos Dados (Camada Silver)
# MAGIC
# MAGIC Na **camada Silver**, aplicamos um conjunto de transforma√ß√µes com o objetivo de **melhorar a qualidade, padronizar os dados e garantir sua usabilidade anal√≠tica**. Esta etapa √© respons√°vel por preparar os dados para an√°lises confi√°veis, eliminando inconsist√™ncias, padronizando valores e enriquecendo a estrutura original do dataset.
# MAGIC
# MAGIC Importante: mantemos **todos os registros v√°lidos da camada Bronze**, exceto em casos de filtragem por qualidade (ex: registros duplicados ou inv√°lidos). O foco √© garantir **consist√™ncia e integridade dos dados** para consumo por visualiza√ß√µes, an√°lises explorat√≥rias e camadas anal√≠ticas posteriores (Gold).
# MAGIC
# MAGIC ---
# MAGIC
# MAGIC ### üîß Principais Transforma√ß√µes Aplicadas:
# MAGIC
# MAGIC - **Padroniza√ß√£o de Nomes de Colunas**  
# MAGIC   Todas as colunas foram renomeadas para o padr√£o `snake_case`, em letras min√∫sculas e sem espa√ßos, facilitando seu uso em consultas SQL e DataFrame API.  
# MAGIC   Exemplo: `"Quality of Sleep"` ‚Üí `sleep_quality`.
# MAGIC
# MAGIC - **Tratamento de Valores Ausentes (null)**  
# MAGIC   Realizamos verifica√ß√£o de valores nulos nas colunas principais. No dataset original, n√£o foram identificados nulos, portanto, **nenhuma imputa√ß√£o foi necess√°ria**. Caso existissem, poder√≠amos aplicar:
# MAGIC   - M√©dia para vari√°veis num√©ricas
# MAGIC   - Categoria `"Desconhecido"` para vari√°veis categ√≥ricas
# MAGIC
# MAGIC - **Corre√ß√£o de Inconsist√™ncias Categ√≥ricas**  
# MAGIC   A coluna `bmi_category` apresentava valores distintos para a mesma categoria: `"Normal"` e `"Normal Weight"`. Esses valores foram **padronizados para `"Normal"`**, garantindo uniformidade nas an√°lises.
# MAGIC
# MAGIC - **Convers√£o Expl√≠cita de Tipos de Dados**  
# MAGIC   Embora o Spark tenha inferido corretamente a maioria dos tipos (inteiros, double, string), garantimos a tipagem adequada para cada coluna, especialmente ap√≥s transforma√ß√µes.  
# MAGIC   Exemplo: `bp_systolic` e `bp_diastolic` (derivadas de `blood_pressure`) foram convertidas para `IntegerType`.
# MAGIC
# MAGIC - **Enriquecimento de Colunas**  
# MAGIC   A coluna `blood_pressure` foi desmembrada (split) em duas novas colunas:
# MAGIC   - `bp_systolic` (press√£o sist√≥lica)
# MAGIC   - `bp_diastolic` (press√£o diast√≥lica)  
# MAGIC   Isso permite an√°lises separadas de cada componente da press√£o arterial.  
# MAGIC   A coluna original (`blood_pressure`) foi **mantida** para refer√™ncia, mas poderia ser descartada em um cen√°rio produtivo.
# MAGIC
# MAGIC - **Verifica√ß√£o de Duplicidade de IDs**  
# MAGIC   Confirmamos que a coluna `person_id` √© **√∫nica por registro**, n√£o sendo necess√°rio aplicar deduplica√ß√£o. Ela foi mantida como chave t√©cnica para eventuais an√°lises de granularidade individual.
# MAGIC
# MAGIC ---
# MAGIC
# MAGIC ### Resultado da Transforma√ß√£o
# MAGIC
# MAGIC Ao final desta etapa, obtivemos uma tabela Silver consistente, confi√°vel e pronta para an√°lises e agrega√ß√µes. Todos os dados est√£o devidamente limpos, tipados e padronizados. Agora seguimos para a persist√™ncia no formato Parquet e registro no cat√°logo do Spark, garantindo rastreabilidade e integra√ß√£o com as pr√≥ximas etapas do pipeline (Gold).
# MAGIC
# MAGIC Vamos agora aplicar essas transforma√ß√µes usando a API de DataFrame do Spark:

# COMMAND ----------

from pyspark.sql.functions import trim, when, col, split

# üì¶ Carregar dados da tabela Bronze registrada no cat√°logo
df_bronze = spark.table("bronze_sleep_health")

# üßº Aplicar transforma√ß√µes para criar a camada Silver
df_silver = (
    df_bronze
    # 1. Renomear colunas para padr√£o snake_case
    .withColumnRenamed("Person ID", "person_id")
    .withColumnRenamed("Gender", "gender")
    .withColumnRenamed("Age", "age")
    .withColumnRenamed("Occupation", "occupation")
    .withColumnRenamed("Sleep Duration", "sleep_duration")
    .withColumnRenamed("Quality of Sleep", "sleep_quality")
    .withColumnRenamed("Physical Activity Level", "physical_activity_level")
    .withColumnRenamed("Stress Level", "stress_level")
    .withColumnRenamed("BMI Category", "bmi_category")
    .withColumnRenamed("Blood Pressure", "blood_pressure")
    .withColumnRenamed("Heart Rate", "heart_rate")
    .withColumnRenamed("Daily Steps", "daily_steps")
    .withColumnRenamed("Sleep Disorder", "sleep_disorder")
    
    # 2. Remover espa√ßos em colunas de texto
    .withColumn("gender", trim(col("gender")))
    .withColumn("occupation", trim(col("occupation")))
    .withColumn("bmi_category", trim(col("bmi_category")))
    .withColumn("sleep_disorder", trim(col("sleep_disorder")))
    
    # 3. Padronizar categorias duplicadas
    .withColumn("bmi_category", when(col("bmi_category") == "Normal Weight", "Normal")
                                 .otherwise(col("bmi_category")))
    
    # 4. Separar press√£o arterial em sist√≥lica e diast√≥lica
    .withColumn("bp_systolic", split(col("blood_pressure"), "/").getItem(0).cast("int"))
    .withColumn("bp_diastolic", split(col("blood_pressure"), "/").getItem(1).cast("int"))
    
    # 5. (Opcional) Exemplo de imputa√ß√£o se houvesse nulos
    # .fillna({"sleep_quality": 5})  # Aplicar apenas se necess√°rio
)

# COMMAND ----------

# MAGIC %md
# MAGIC ## Explica√ß√µes das Transforma√ß√µes na Camada Silver
# MAGIC
# MAGIC Nesta etapa, realizamos uma s√©rie de ajustes e enriquecimentos nos dados brutos da camada Bronze para compor a **tabela Silver**, pronta para an√°lises confi√°veis:
# MAGIC
# MAGIC - **Padroniza√ß√£o de nomes de colunas** para o formato `snake_case`, facilitando o uso em SQL e no c√≥digo PySpark.
# MAGIC - **Remo√ß√£o de espa√ßos** nas extremidades de strings categ√≥ricas (ex: `"None "` ‚Üí `"None"`), evitando problemas em agrupamentos e filtros.
# MAGIC - **Unifica√ß√£o de categorias duplicadas**: o valor `"Normal Weight"` na coluna `bmi_category` foi padronizado como `"Normal"`.
# MAGIC - **Separa√ß√£o da press√£o arterial**: a coluna `blood_pressure` foi desmembrada em:
# MAGIC   - `bp_systolic`: componente sist√≥lico (ex: 126)
# MAGIC   - `bp_diastolic`: componente diast√≥lico (ex: 83)
# MAGIC - **Tipos corretos**: as colunas derivadas foram convertidas para inteiros, prontos para estat√≠sticas.
# MAGIC - **Preserva√ß√£o da coluna original** `blood_pressure` para refer√™ncia textual.
# MAGIC - Nenhum valor nulo foi detectado; n√£o foi necess√°rio aplicar imputa√ß√£o, mas deixamos exemplo comentado para casos futuros.
# MAGIC
# MAGIC A camada Silver reflete um **dataset confi√°vel, limpo e analiticamente utiliz√°vel**, respeitando o princ√≠pio de manter os dados mais pr√≥ximos do estado real, mas com consist√™ncia e tipagem adequadas.

# COMMAND ----------

# MAGIC %md
# MAGIC Agora, persistiremos o DataFrame Silver em formato Parquet no DBFS e registraremos a tabela Silver no cat√°logo do Spark:

# COMMAND ----------

# üìã Visualizar o schema atualizado
df_silver.printSchema()

# üîç Amostragem dos dados transformados
df_silver.select(
    "person_id", "age", "gender", "occupation", "sleep_duration", 
    "sleep_quality", "stress_level", "bmi_category", 
    "blood_pressure", "bp_systolic", "bp_diastolic", "sleep_disorder"
).show(5, truncate=False)

# COMMAND ----------

# Persistir dados Silver em Parquet
df_silver.write.mode("overwrite").parquet("/FileStore/tables/silver/sleep_health_and_lifestyle")

# COMMAND ----------

spark.sql("DROP TABLE IF EXISTS silver_sleep_health")

# COMMAND ----------

dbutils.fs.rm("dbfs:/user/hive/warehouse/silver_sleep_health", recurse=True)

# COMMAND ----------

df_silver.write.mode("overwrite").format("parquet").saveAsTable("silver_sleep_health")

# COMMAND ----------

# MAGIC %sql
# MAGIC SELECT * FROM silver_sleep_health LIMIT 5;

# COMMAND ----------

# MAGIC %md
# MAGIC ## 4. An√°lise da Qualidade dos Dados (Data Quality)
# MAGIC
# MAGIC Antes de prosseguir para an√°lises mais avan√ßadas, √© fundamental assegurar que os dados da **camada Silver** estejam consistentes e utiliz√°veis. Nessa etapa, avaliamos a **presen√ßa de valores ausentes (nulos)** e outras poss√≠veis **inconsist√™ncias**.
# MAGIC
# MAGIC ### Verifica√ß√£o de Nulos
# MAGIC
# MAGIC Realizamos a checagem de valores nulos em todas as colunas da tabela `silver_sleep_health`. A inspe√ß√£o inicial, visual e program√°tica, confirmou que:
# MAGIC
# MAGIC - Nenhuma das 13 colunas cont√©m valores nulos;
# MAGIC - Todos os registros est√£o completos e v√°lidos para as an√°lises planejadas.
# MAGIC
# MAGIC Apesar disso, **inclu√≠mos uma verifica√ß√£o automatizada** para garantir a qualidade de forma program√°tica (vide c√≥digo abaixo), assegurando robustez do pipeline.

# COMMAND ----------

### C√≥digo para valida√ß√£o de nulos:
from pyspark.sql.functions import col, sum

# Somar nulos por coluna
df_silver.select([
    sum(col(c).isNull().cast("int")).alias(c)
    for c in df_silver.columns
]).show()

# COMMAND ----------

# MAGIC %md
# MAGIC 	### Continua√ß√£o da An√°lise de Qualidade dos Dados (Data Quality)
# MAGIC
# MAGIC Ap√≥s validar a aus√™ncia de nulos, realizamos outras verifica√ß√µes importantes:
# MAGIC
# MAGIC #### Valores Duplicados
# MAGIC Verificamos se h√° **IDs duplicados** (o que indicaria entradas repetidas da mesma pessoa). A contagem de `person_id` distintos retornou exatamente **374 registros √∫nicos**, o mesmo n√∫mero de linhas do dataset. Isso confirma que **n√£o h√° duplicatas** ‚Äî cada linha representa um indiv√≠duo diferente.
# MAGIC
# MAGIC #### Intervalos e Outliers
# MAGIC
# MAGIC Avaliamos os intervalos m√≠nimos e m√°ximos das vari√°veis num√©ricas para identificar poss√≠veis **outliers** ou **valores incoerentes**. Resultados:
# MAGIC
# MAGIC | **Vari√°vel**              | **Intervalo Observado** | **Coment√°rio** |
# MAGIC |---------------------------|--------------------------|----------------|
# MAGIC | Idade                     | 27 a 59 anos             | Todos adultos de meia-idade. Plaus√≠vel. |
# MAGIC | Dura√ß√£o do Sono (horas)   | 5.8 a 8.5 h              | Extremamente plaus√≠vel (sem valores an√¥malos). |
# MAGIC | Qualidade do Sono (1-10)  | 4 a 9                    | N√£o h√° extremos absolutos (1 ou 10), mas h√° varia√ß√µes relevantes. |
# MAGIC | Atividade F√≠sica (min/dia)| 30 a 90                  | Ningu√©m √© completamente sedent√°rio; 90 min √© elevado, mas plaus√≠vel. |
# MAGIC | N√≠vel de Estresse (1-10)  | 3 a 8                    | Faixa moderada; ningu√©m relatou estresse extremamente baixo ou alto. |
# MAGIC | Frequ√™ncia Card√≠aca (bpm) | 65 a 86 bpm              | Todos dentro da faixa fisiol√≥gica considerada normal. |
# MAGIC | Passos Di√°rios            | 3.000 a 10.000           | 3.000 √© sedent√°rio, 10.000 √© meta recomendada. Sem outliers. |
# MAGIC | Press√£o Sist√≥lica (mmHg)  | 110 a 140                | Faixa entre normal e lim√≠trofe. Coerente. |
# MAGIC | Press√£o Diast√≥lica (mmHg) | 70 a 95                 | Dentro da faixa esperada. Nenhum valor extremo. |
# MAGIC
# MAGIC **Conclus√£o**: Os dados est√£o **bem comportados e realistas**, sem necessidade de tratamento de outliers como Winsoriza√ß√£o. A √∫nica inconsist√™ncia real (‚ÄúNormal Weight‚Äù vs ‚ÄúNormal‚Äù) j√° foi **padronizada** durante a transforma√ß√£o.
# MAGIC
# MAGIC ---
# MAGIC
# MAGIC #### Coer√™ncia Entre Atributos
# MAGIC
# MAGIC Al√©m de avaliar valores individuais, verificamos **rela√ß√µes l√≥gicas entre vari√°veis**:
# MAGIC
# MAGIC - **Dist√∫rbios do Sono**: Indiv√≠duos com **ins√¥nia ou apneia** tendem a ter **menor dura√ß√£o** e **pior qualidade de sono**, conforme esperado.
# MAGIC - **Estresse**: Existe uma **rela√ß√£o inversa vis√≠vel** entre n√≠vel de estresse e qualidade/dura√ß√£o do sono ‚Äî indiv√≠duos mais estressados dormem menos e pior.
# MAGIC - **Ocupa√ß√£o**: Profissionais de vendas (ex.: *Sales Representative*) j√° se destacam negativamente, com **baixa dura√ß√£o e qualidade do sono** ‚Äî possivelmente pela natureza estressante do trabalho.
# MAGIC - **G√™nero e idade**: Padr√µes por g√™nero ou idade tamb√©m podem ser relevantes e ser√£o analisados nas se√ß√µes a seguir.
# MAGIC
# MAGIC ---
# MAGIC
# MAGIC Com todas essas valida√ß√µes realizadas, podemos afirmar que os dados da camada Silver est√£o **consistentes e prontos** para an√°lises mais aprofundadas.
# MAGIC
# MAGIC A seguir, partiremos para a constru√ß√£o da **camada Gold** com dados agregados e insights acion√°veis.

# COMMAND ----------

# MAGIC %md
# MAGIC 5. Agrega√ß√£o e Prepara√ß√£o Final (Camada Gold)
# MAGIC
# MAGIC A camada Gold representa os dados prontos para consumo anal√≠tico, frequentemente agregados ou resumidos de forma a responder perguntas de neg√≥cio espec√≠ficas. Enquanto a camada Silver ainda cont√©m dados no n√≠vel de detalhe de cada indiv√≠duo, podemos querer derivar vis√µes mais consolidadas na Gold.
# MAGIC
# MAGIC Para este projeto, vamos criar uma tabela Gold que resume algumas m√©tricas-chave por categoria de dist√∫rbio do sono. Essa agrega√ß√£o nos ajudar√° a entender, por exemplo, como variam as caracter√≠sticas de sa√∫de e h√°bitos entre pessoas com ins√¥nia, com apneia do sono, e sem nenhum dist√∫rbio.
# MAGIC
# MAGIC (Observa√ß√£o: Poder√≠amos criar m√∫ltiplas tabelas Gold para diferentes perspectivas ‚Äì por exemplo, por Ocupa√ß√£o, por G√™nero, etc. Aqui faremos uma agrega√ß√£o como exemplo, mas ainda assim poderemos explorar outras quest√µes diretamente na camada Silver quando conveniente.)
# MAGIC
# MAGIC Vamos agrupar os dados por sleep_disorder e calcular: n√∫mero de indiv√≠duos em cada categoria, m√©dia de horas de sono, m√©dia de qualidade do sono, m√©dia de n√≠vel de estresse, m√©dia de n√≠vel de atividade f√≠sica, m√©dia de frequ√™ncia card√≠aca e m√©dia de passos di√°rios. Arredondaremos as m√©dias para tornar a sa√≠da leg√≠vel.

# COMMAND ----------

from pyspark.sql.functions import avg, count, round

# Carregar dados da tabela Silver
df_silver = spark.table("silver_sleep_health")

# Agregar m√©tricas por categoria de dist√∫rbio do sono
df_gold = (df_silver.groupBy("sleep_disorder")
    .agg(
        count("*").alias("count_individuals"),
        round(avg("sleep_duration"), 2).alias("avg_sleep_duration"),
        round(avg("sleep_quality"), 2).alias("avg_sleep_quality"),
        round(avg("stress_level"), 2).alias("avg_stress_level"),
        round(avg("physical_activity_level"), 2).alias("avg_physical_activity_level"),
        round(avg("heart_rate"), 2).alias("avg_heart_rate"),
        round(avg("daily_steps"), 0).cast("int").alias("avg_daily_steps")
    )
)

# Visualizar o resultado da agrega√ß√£o
df_gold.show()

# COMMAND ----------

# MAGIC %md
# MAGIC Analisando brevemente esses n√∫meros agregados (que interpretaremos mais adiante): por exemplo, indiv√≠duos com Insomnia dormem em m√©dia 6.59 horas com qualidade 6.53, e t√™m estresse m√©dio 7.17 ‚Äì claramente diferente de quem n√£o tem dist√∫rbio (7.36 horas, qualidade 7.63, estresse 4.53). J√° os com Sleep Apnea ficam num interm√©dio, dormindo ~7.03 horas, qualidade ~7.21, estresse 6.95.
# MAGIC
# MAGIC Agora, salvaremos essa tabela Gold e a registraremos no cat√°logo:

# COMMAND ----------

# Persistir a Tabela Gold no formato Parquet e registrar no cat√°logo
df_gold.write.mode("overwrite").format("parquet").saveAsTable("gold_sleep_health")

# COMMAND ----------

spark.sql("DROP TABLE IF EXISTS gold_sleep_metrics_by_disorder")
dbutils.fs.rm("dbfs:/user/hive/warehouse/gold_sleep_metrics_by_disorder", recurse=True)

# COMMAND ----------

df_gold.write.mode("overwrite").format("parquet").saveAsTable("gold_sleep_metrics_by_disorder")

# COMMAND ----------

# MAGIC %sql
# MAGIC SELECT * FROM gold_sleep_metrics_by_disorder LIMIT 10;

# COMMAND ----------

# MAGIC %md
# MAGIC A tabela gold_sleep_metrics_by_disorder est√° pronta para consultas SQL ou uso em visualiza√ß√µes. Por exemplo, um SELECT * FROM gold_sleep_metrics_by_disorder; retornaria a mesma pequena tabela mostrada acima, servindo como base para insights de alto n√≠vel sobre dist√∫rbios do sono.

# COMMAND ----------

# MAGIC %md
# MAGIC **An√°lise da Qualidade do Sono por Tipo de Dist√∫rbio**
# MAGIC
# MAGIC _O gr√°fico acima apresenta a distribui√ß√£o da qualidade do sono (de 1 a 10) entre os diferentes grupos de indiv√≠duos, classificados de acordo com o tipo de dist√∫rbio do sono informado no dataset.
# MAGIC
# MAGIC Cada boxplot representa um resumo estat√≠stico da qualidade do sono para um grupo espec√≠fico:
# MAGIC 	‚Ä¢	Aus√™ncia de Dist√∫rbio do Sono: Apresenta a maior mediana de qualidade do sono, com baixa dispers√£o. Isso indica que, para a maioria desses indiv√≠duos, o sono √© consistente e de boa qualidade, como era esperado para quem n√£o apresenta dist√∫rbios cl√≠nicos.
# MAGIC 	‚Ä¢	Apneia do Sono: Os indiv√≠duos com apneia tendem a apresentar uma qualidade de sono mais baixa e mais dispersa, o que reflete os efeitos diretos desse dist√∫rbio, conhecido por causar interrup√ß√µes frequentes na respira√ß√£o durante o sono. Isso afeta negativamente tanto a profundidade quanto a continuidade do descanso.
# MAGIC 	‚Ä¢	Ins√¥nia: Como previsto, o grupo de indiv√≠duos com ins√¥nia mostra uma das menores medianas de qualidade do sono. A dispers√£o tamb√©m √© consider√°vel, sugerindo que h√° varia√ß√£o entre os casos ‚Äî alguns mais leves e outros mais severos. Esse comportamento √© t√≠pico, uma vez que a ins√¥nia afeta n√£o s√≥ o in√≠cio do sono, mas tamb√©m sua manuten√ß√£o e percep√ß√£o._

# COMMAND ----------

# MAGIC %md
# MAGIC
# MAGIC 6. **An√°lises Explorat√≥rias e Insights de Neg√≥cio**
# MAGIC
# MAGIC Com os dados preparados, podemos agora responder a algumas perguntas de neg√≥cio e explorar hip√≥teses sobre h√°bitos de sono e sa√∫de. Iremos utilizar tanto consultas nos dados (Silver/Gold) quanto visualiza√ß√µes gr√°ficas para interpretar os resultados.

# COMMAND ----------

# MAGIC %md
# MAGIC **Estat√≠sticas descritivas por grupo (m√©dia, desvio padr√£o e mediana da qualidade do sono)**

# COMMAND ----------

# Importar bibliotecas
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
from pyspark.sql import functions as F

# Carregar e preparar os dados da tabela silver
df_silver = spark.table("silver_sleep_health")

# Traduzir dist√∫rbios para portugu√™s
df_box = df_silver.select("sleep_quality", "sleep_disorder") \
    .withColumn(
        "Dist√∫rbio do Sono",
        F.when(F.col("sleep_disorder") == "Sleep Apnea", "Apneia do Sono")
         .when(F.col("sleep_disorder") == "Insomnia", "Ins√¥nia")
         .when(F.col("sleep_disorder") == "None", "Aus√™ncia de Dist√∫rbio do Sono")
         .otherwise("Desconhecido")
    ).toPandas()

# Agrupar e calcular estat√≠sticas
df_resumo = (
    df_box.groupby("Dist√∫rbio do Sono")["sleep_quality"]
    .agg(["count", "mean", "median", "std"])
    .rename(columns={
        "count": "Qtd Indiv√≠duos",
        "mean": "M√©dia",
        "median": "Mediana",
        "std": "Desvio Padr√£o"
    })
    .round(2)
    .sort_values(by="M√©dia", ascending=False)
)

# Estilizar exibi√ß√£o no notebook
df_resumo.index.name = "Dist√∫rbio do Sono"
df_resumo.style.set_caption("Resumo Estat√≠stico da Qualidade do Sono por Dist√∫rbio") \
    .background_gradient(cmap="Blues", subset=["M√©dia"]) \
    .format(precision=2)

# COMMAND ----------

# MAGIC %md
# MAGIC **An√°lise Estat√≠stica da Qualidade do Sono por Tipo de Dist√∫rbio**
# MAGIC
# MAGIC A tabela acima resume a qualidade do sono autoavaliada (em escala de 1 a 10), agrupada por tipo de dist√∫rbio do sono relatado. Para cada grupo, foram calculados os seguintes indicadores estat√≠sticos:
# MAGIC
# MAGIC - **Qtd Indiv√≠duos**: N√∫mero de pessoas em cada categoria.
# MAGIC - **M√©dia**: Valor m√©dio da qualidade do sono.
# MAGIC - **Mediana**: Valor central da distribui√ß√£o.
# MAGIC - **Desvio Padr√£o**: Medida de dispers√£o dos dados.
# MAGIC
# MAGIC ### Principais Insights:
# MAGIC
# MAGIC - **Aus√™ncia de Dist√∫rbio do Sono**: Esse grupo apresenta a maior m√©dia (e tamb√©m mediana) de qualidade do sono, com menor varia√ß√£o entre os indiv√≠duos. Isso confirma a expectativa de que pessoas sem dist√∫rbios tendem a ter um sono mais consistente e satisfat√≥rio.
# MAGIC
# MAGIC - **Ins√¥nia**: Apresenta a menor m√©dia e uma dispers√£o elevada, sugerindo que esse dist√∫rbio afeta fortemente a percep√ß√£o da qualidade do sono. A varia√ß√£o alta indica que h√° casos mais severos e outros mais moderados dentro do grupo.
# MAGIC
# MAGIC - **Apneia do Sono**: Embora apresente m√©dia superior √† de ins√¥nia, ainda est√° abaixo do grupo sem dist√∫rbios. O desvio padr√£o mais alto indica grande heterogeneidade dentro do grupo, o que pode refletir diferentes n√≠veis de severidade da apneia ou coexist√™ncia com outros fatores de sa√∫de.
# MAGIC
# MAGIC Esses dados refor√ßam que dist√∫rbios do sono est√£o associados √† pior qualidade percebida do sono, e que estrat√©gias de monitoramento e tratamento s√£o essenciais para melhorar a sa√∫de do sono nessas popula√ß√µes.

# COMMAND ----------

# MAGIC %md
# MAGIC **Distribui√ß√£o de Dist√∫rbios do Sono na Popula√ß√£o**

# COMMAND ----------

# Importar bibliotecas
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
from pyspark.sql import functions as F

# Carregar a tabela Silver
df_silver = spark.table("silver_sleep_health")

# Traduzir os r√≥tulos dos dist√∫rbios (incluindo None)
df_pt = df_silver.withColumn(
    "disturbio_sono",
    F.when(F.col("sleep_disorder") == "Sleep Apnea", "Apneia do Sono")
     .when(F.col("sleep_disorder") == "Insomnia", "Ins√¥nia")
     .when(F.col("sleep_disorder") == "None", "Aus√™ncia de Dist√∫rbio do Sono")
     .otherwise("Desconhecido")  # Seguran√ßa extra para casos inesperados
)

# Agrupar e converter para Pandas
sleep_disorder_counts = (
    df_pt.groupBy("disturbio_sono").count()
    .toPandas()
    .sort_values(by="count", ascending=False)
)

# Plotar gr√°fico
plt.figure(figsize=(10, 6))
sns.set(style="whitegrid")

ax = sns.barplot(
    x="disturbio_sono",
    y="count",
    data=sleep_disorder_counts,
    palette="Set2"
)

# Adicionar valores no topo das barras
for i, row in sleep_disorder_counts.iterrows():
    ax.text(i, row["count"] + 2, f"{row['count']}", ha="center", va="bottom", fontsize=11)

# T√≠tulo e r√≥tulos
plt.title("Distribui√ß√£o dos Dist√∫rbios do Sono", fontsize=14, weight='bold')
plt.xlabel("Tipo de Dist√∫rbio do Sono", fontsize=12)
plt.ylabel("N√∫mero de Indiv√≠duos", fontsize=12)
plt.xticks(rotation=10, fontsize=11)
plt.yticks(fontsize=11)
plt.tight_layout()
plt.show()

# COMMAND ----------

# MAGIC %md
# MAGIC ### Distribui√ß√£o dos Dist√∫rbios do Sono
# MAGIC
# MAGIC O gr√°fico acima mostra a distribui√ß√£o dos indiv√≠duos conforme a presen√ßa (ou n√£o) de dist√∫rbios do sono.
# MAGIC
# MAGIC - A maioria dos participantes **n√£o apresenta dist√∫rbios**, com cerca de **219 indiv√≠duos (aproximadamente 58%)** classificados com ‚ÄúAus√™ncia de Dist√∫rbio do Sono‚Äù.
# MAGIC - Os demais est√£o quase igualmente divididos entre:
# MAGIC   - **Apneia do Sono**: 78 indiv√≠duos (~21%)
# MAGIC   - **Ins√¥nia**: 77 indiv√≠duos (~21%)
# MAGIC
# MAGIC Essa distribui√ß√£o mostra que cerca de **42% da amostra possui algum dist√∫rbio do sono**, o que representa um percentual significativo. Apesar de o dataset ser sint√©tico (gerado artificialmente), ele oferece uma amostra balanceada o suficiente para an√°lises comparativas entre os grupos.
# MAGIC
# MAGIC **Implica√ß√µes pr√°ticas**: Para profissionais ou neg√≥cios da √°rea da sa√∫de (como cl√≠nicas do sono), esses dados indicam que quase metade da popula√ß√£o avaliada poderia demandar algum tipo de interven√ß√£o ou tratamento. Como ins√¥nia e apneia aparecem em propor√ß√µes semelhantes, estrat√©gias de aten√ß√£o e cuidado devem ser **equilibradas entre ambos os dist√∫rbios**.
# MAGIC
# MAGIC Na sequ√™ncia, aprofundaremos a rela√ß√£o entre dist√∫rbios, **qualidade** e **dura√ß√£o do sono**.

# COMMAND ----------

# MAGIC %md
# MAGIC **Rela√ß√£o entre Dura√ß√£o do Sono, Qualidade e Dist√∫rbios**

# COMMAND ----------

# Importar bibliotecas
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
from pyspark.sql import functions as F

# Carregar a tabela Silver
df_silver = spark.table("silver_sleep_health")

# Traduzir os r√≥tulos dos dist√∫rbios (inclusive None)
df_plot = df_silver.select("sleep_duration", "sleep_quality", "sleep_disorder") \
    .withColumn(
        "disturbio_sono",
        F.when(F.col("sleep_disorder") == "Sleep Apnea", "Apneia do Sono")
         .when(F.col("sleep_disorder") == "Insomnia", "Ins√¥nia")
         .when(F.col("sleep_disorder") == "None", "Aus√™ncia de Dist√∫rbio do Sono")
         .otherwise("Desconhecido")
    ).toPandas()

# Gr√°fico de dispers√£o
plt.figure(figsize=(10, 6))
sns.set(style="whitegrid")

sns.scatterplot(data=df_plot,
                x="sleep_duration",
                y="sleep_quality",
                hue="disturbio_sono",
                palette="Set1",
                alpha=0.8,
                s=60)

plt.title("Rela√ß√£o entre Dura√ß√£o e Qualidade do Sono por Tipo de Dist√∫rbio", fontsize=14, weight='bold')
plt.xlabel("Dura√ß√£o do Sono (horas)", fontsize=12)
plt.ylabel("Qualidade do Sono (1 a 10)", fontsize=12)
plt.legend(title="Dist√∫rbio do Sono", fontsize=10, title_fontsize=11)
plt.grid(True, linestyle="--", alpha=0.5)
plt.tight_layout()
plt.show()

# COMMAND ----------

# MAGIC %md
# MAGIC O gr√°fico de dispers√£o acima relaciona horas de sono por noite (eixo X) com a qualidade do sono autoavaliada (eixo Y), e diferencia os indiv√≠duos por categoria de dist√∫rbio do sono. Observamos uma tend√™ncia clara: h√° uma correla√ß√£o positiva entre dormir mais horas e ter uma qualidade de sono melhor. Os pontos se concentram aproximadamente em uma diagonal ascendente ‚Äì ou seja, quem dorme pouco (em torno de 6 horas) tende a reportar qualidade menor (por volta de 5-6), enquanto quem dorme perto de 8 horas tende a dar notas de qualidade maiores (7-9).
# MAGIC
# MAGIC Al√©m disso, as cores/formatos dos pontos indicam que:
# MAGIC 	‚Ä¢	Indiv√≠duos com Insomnia (marcadores verdes ‚Äúx‚Äù) est√£o predominantemente na parte inferior esquerda do gr√°fico ‚Äì muitos dormem menos de 6.5 horas e avaliam a qualidade entre 4 e 7. N√£o surpreende, j√° que ins√¥nia se caracteriza por dificuldade em manter um sono longo e restaurador.
# MAGIC 	‚Ä¢	Indiv√≠duos com Sleep Apnea (azul) tamb√©m sofrem impacto, embora um pouco menos extremo: muitos dormem entre ~6 e 7.5 horas com qualidade variando de 6 a 8. A apneia pode fragmentar o sono, reduzindo sua efic√°cia, o que explica por que mesmo com horas relativamente ok, a qualidade pode n√£o ser m√°xima.
# MAGIC 	‚Ä¢	Aqueles sem dist√∫rbio (vermelho) se espalham mais para direita e topo: √© mais comum v√™-los dormindo 7-8+ horas e alcan√ßando qualidade alta (7-9). H√° poucos vermelhos em qualidade 5 ou 6.
# MAGIC
# MAGIC Essa rela√ß√£o confirma o esperado: dist√∫rbios prejudicam tanto a dura√ß√£o quanto a percep√ß√£o de qualidade do sono. Para um neg√≥cio na √°rea de sa√∫de, refor√ßa-se a import√¢ncia de tratar problemas de sono n√£o s√≥ para melhorar a quantidade de horas dormidas, mas tamb√©m a qualidade percebida pelo paciente.
# MAGIC
# MAGIC **Impacto do Estresse e Atividade F√≠sica**
# MAGIC
# MAGIC A partir dos dados agregados e correlacionados, verificamos que o n√≠vel de estresse tem forte correla√ß√£o negativa com o sono:
# MAGIC 	‚Ä¢	Pessoas sem dist√∫rbio apresentam estresse m√©dio ~4.5, enquanto insones e apneicos t√™m ~7.1 e ~6.9 respectivamente (bem mais alto).
# MAGIC 	‚Ä¢	A correla√ß√£o Pearson entre stress_level e sleep_quality no dataset Silver √© aproximadamente -0.90, e com sleep_duration cerca de -0.81, indicando que n√≠veis altos de estresse est√£o associados a dormir menos e pior (o que faz sentido intuitivo e cl√≠nico).
# MAGIC
# MAGIC Por outro lado, o n√≠vel de atividade f√≠sica di√°rio (minutos de exerc√≠cio) n√£o varia tanto entre os grupos de dist√∫rbio (m√©dias ~60 min para quem n√£o tem dist√∫rbio vs ~45 min com dist√∫rbio). A correla√ß√£o entre atividade f√≠sica e qualidade do sono √© positiva por√©m fraca (~0.19 no coeficiente de Pearson). Ou seja, praticar mais exerc√≠cios ajuda um pouco no sono, mas no dataset o efeito √© modesto. Pode ser que todos tenham algum n√≠vel m√≠nimo de atividade (ningu√©m sedent√°rio absoluto) e poucos muito ativos, limitando a variabilidade.
# MAGIC
# MAGIC Entretanto, a frequ√™ncia card√≠aca de repouso ficou mais alta em m√©dia para quem tem dist√∫rbios (cerca de 80 bpm) comparado a quem n√£o tem (73 bpm). Isso pode indicar que ins√¥nia e apneia est√£o associadas a pior condicionamento ou maior ativa√ß√£o do sistema cardiovascular (possivelmente relacionado ao estresse). J√° a m√©dia de passos di√°rios tamb√©m foi bem menor nos grupos com dist√∫rbio (~5000) versus sem (~7700), sugerindo que problemas de sono podem vir acompanhados de estilo de vida menos ativo (ou vice-versa, menos atividade pode prejudicar o sono).
# MAGIC
# MAGIC **Diferen√ßas por Ocupa√ß√£o e G√™nero**
# MAGIC
# MAGIC Analisando os dados por ocupa√ß√£o, encontramos insights interessantes:
# MAGIC 	‚Ä¢	Profissionais de vendas parecem ter os piores indicadores de sono. Por exemplo, os Sales Representatives dormem em m√©dia apenas ~5.9 horas com qualidade m√©dia em torno de 4 (muito baixa) e figuram com os maiores n√≠veis de estresse (~8 de m√©dia!). Essa ocupa√ß√£o pode envolver press√£o por metas e hor√°rios irregulares, explicando o alto estresse e pouco sono. Outra categoria similar, Salesperson, tamb√©m est√° entre as piores (m√©dia ~6.4h de sono, qualidade 6.0, estresse 7.0).
# MAGIC 	‚Ä¢	Em contraste, ocupa√ß√µes de Engenharia apresentam os melhores resultados de sono. Os dados indicam que Engineers (gen√©rico) dormem quase 8 horas (7.99h) em m√©dia, com qualidade acima de 8, e relatam o menor estresse (~3.9). Lawyers e Accountants tamb√©m dormem bastante (7.4h e 7.1h) e t√™m qualidade alta (~7.9), possivelmente indicando rotinas mais controladas ou conscientiza√ß√£o sobre sa√∫de.
# MAGIC 	‚Ä¢	M√©dicos (Doctors) e enfermeiros (Nurses) est√£o em posi√ß√£o intermedi√°ria, com ~7 horas de sono e qualidade ~7, mas curiosamente apresentam estresse relativamente elevado (especialmente m√©dicos com m√©dia ~6.7 de estresse). Isso sugere que, embora consigam dormir uma quantidade decente, a tens√£o da profiss√£o m√©dica afeta a qualidade percebida (ainda assim melhor que a do pessoal de vendas).
# MAGIC 	‚Ä¢	Professores (Teachers) e gestores (Managers) tamb√©m mostraram m√©tricas medianas (sono ~6.7-6.9h, qualidade ~7.0, estresse ~5.0), sem extremos.
# MAGIC
# MAGIC Em resumo, profiss√µes com maior estresse profissional tendem a refletir pior perfil de sono. Este achado pode ser valioso para programas de bem-estar corporativo: empresas de setores comerciais poderiam investir em apoio ao sono dos funcion√°rios (por exemplo, gerenciamento de estresse, hor√°rios flex√≠veis), enquanto setores de engenharia aparentemente j√° demonstram equil√≠brio melhor (mas n√£o se deve ignorar indiv√≠duos fora da m√©dia).
# MAGIC
# MAGIC **Quanto √†s diferen√ßas por g√™nero:**
# MAGIC 	‚Ä¢	Mulheres no dataset dormem um pouco mais que homens (7.23 vs 7.04 horas em m√©dia) e relatam qualidade do sono superior (7.66 vs 6.97). Al√©m disso, o n√≠vel m√©dio de estresse das mulheres √© menor (4.68 contra 6.08 dos homens).
# MAGIC 	‚Ä¢	Essa tend√™ncia sugere que, nesta amostra, homens est√£o mais estressados e dormindo pior que mulheres. Poderia ser reflexo das ocupa√ß√µes (talvez mais homens em cargos de alta press√£o?) ou outros fatores sociais. De qualquer forma, indica um poss√≠vel p√∫blico-alvo: homens poderiam demandar mais interven√ß√µes de sa√∫de do sono.
# MAGIC 	‚Ä¢	N√£o h√° diferen√ßa de g√™nero nos dist√∫rbios presentes: tanto ins√¥nia quanto apneia apareceram em ambos g√™neros, mas os efeitos parecem alinhados ao n√≠vel de estresse e h√°bitos de cada indiv√≠duo.
# MAGIC
# MAGIC **Resumo dos Insights Chave**
# MAGIC 	‚Ä¢	Dist√∫rbios do Sono s√£o comuns: Quase 42% da amostra possui ins√¥nia ou apneia, impactando negativamente suas horas e qualidade de sono.
# MAGIC 	‚Ä¢	Estresse √© um fator cr√≠tico: Altos n√≠veis de estresse se associam a sono insuficiente e insatisfat√≥rio. Programas para redu√ß√£o de estresse podem melhorar a sa√∫de do sono.
# MAGIC 	‚Ä¢	Atividade F√≠sica e Condicionamento: Embora todos fa√ßam alguma atividade, indiv√≠duos com melhor sono tendem a dar mais passos di√°rios e ter FC de repouso mais baixa (melhor condicionamento cardiovascular). Est√≠mulo √† atividade f√≠sica pode trazer benef√≠cios moderados ao sono.
# MAGIC 	‚Ä¢	Ocupa√ß√£o influencia o sono: Profissionais de vendas destacam-se negativamente (alto estresse, pior sono), enquanto engenheiros e alguns profissionais liberais t√™m sono melhor. Empresas podem usar esses dados para direcionar a√ß√µes de sa√∫de ocupacional.
# MAGIC 	‚Ä¢	Diferen√ßas de G√™nero: Homens da amostra tiveram piores resultados de sono que mulheres, possivelmente ligados a maiores n√≠veis de estresse. Interven√ß√µes podem ser direcionadas levando isso em conta.
# MAGIC
# MAGIC 7. **Conclus√£o e Autoavalia√ß√£o**_
# MAGIC
# MAGIC Conclus√£o do Estudo: Constru√≠mos um pipeline completo de dados, passando pelas camadas Bronze (ingest√£o bruta), Silver (refinamento e limpeza) e Gold (agrega√ß√£o e sumariza√ß√£o), usando Spark no ambiente Databricks. O dataset Sleep Health and Lifestyle nos permitiu explorar como fatores de estilo de vida e sa√∫de se relacionam com a qualidade do sono. Confirmamos expectativas, como o impacto negativo do estresse e de dist√∫rbios como ins√¥nia, e levantamos insights acion√°veis, como a identifica√ß√£o de grupos (por profiss√£o ou g√™nero) que poderiam se beneficiar de aten√ß√£o especial para melhoria do sono. Todos os passos foram documentados em detalhe, mostrando n√£o apenas o o que foi feito, mas por que ‚Äì desde decis√µes de modelagem at√© interpreta√ß√£o de resultados._
# MAGIC
# MAGIC Aprendizados e Boas Pr√°ticas Aplicadas: Conseguimos aplicar com sucesso boas pr√°ticas de engenharia de dados, como a organiza√ß√£o em camadas, o uso de formatos colunar eficientes (Parquet), a cria√ß√£o de um cat√°logo de dados, e transforma√ß√µes com APIs distribu√≠das do Spark ao inv√©s de abordagens sequenciais. A separa√ß√£o em Bronze/Silver/Gold demonstrou como cada camada tem um prop√≥sito distinto (confiabilidade vs. usabilidade vs. valor de neg√≥cio). Al√©m disso, integraremos no futuro a automa√ß√£o desses passos em um fluxo de trabalho repet√≠vel (por exemplo, usando jobs do Databricks ou pipelines de integra√ß√£o cont√≠nua de dados).